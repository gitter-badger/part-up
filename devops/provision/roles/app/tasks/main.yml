---
- name: docker | start application
  docker:
    name: app
    image: "lifely/partup:{{ tag }}"
    username: "{{ docker.registry.username }}"
    email: "{{ docker.registry.email }}"
    password: "{{ docker.registry.password }}"
    state: reloaded
    restart_policy: always
    pull: always
    ports:
      - "{{ansible_eth1.ipv4.address}}:3000:3000"
    env: "{{ app.env|combine({'PARTUP_CRON_ENABLED': 0, 'KADIRA_OPTIONS_HOSTNAME': ansible_hostname}) }}"
  when: "'appservers' in group_names"
  tags: app

- name: docker | start application
  docker:
    name: app
    image: "lifely/partup:{{ tag }}"
    username: "{{ docker.registry.username }}"
    email: "{{ docker.registry.email }}"
    password: "{{ docker.registry.password }}"
    state: reloaded
    restart_policy: always
    pull: always
    ports:
      - "{{ansible_eth1.ipv4.address}}:3000:3000"
    env: "{{ app.env|combine({'PARTUP_CRON_ENABLED': 1}) }}"
  when: "'cronservers' in group_names"
  tags: app

- name: docker | remove all images (disk space)
  shell: docker rmi $(docker images -q)
  ignore_errors: yes
  tags: app
